rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isSignedIn() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isSignedIn();
      allow write: if isOwner(userId) || isAdmin();
    }
    
    // Projects collection
    match /projects/{projectId} {
      allow read: if isSignedIn() || resource.data.settings.isPublic == true;
      allow create: if isSignedIn();
      allow update: if isOwner(resource.data.owner) || 
                      request.auth.uid in resource.data.collaborators;
      allow delete: if isOwner(resource.data.owner) || isAdmin();
    }
    
    // AI Sessions
    match /ai_sessions/{sessionId} {
      allow read: if isOwner(resource.data.userId);
      allow write: if isSignedIn();
    }
    
    // Templates
    match /templates/{templateId} {
      allow read: if true; // Public templates
      allow write: if isAdmin();
    }
  }
}